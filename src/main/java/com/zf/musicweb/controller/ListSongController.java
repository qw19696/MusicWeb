package com.zf.musicweb.controller;import com.alibaba.fastjson.JSONObject;import com.zf.musicweb.entity.ListSong;import com.zf.musicweb.service.ListSongService;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RestController;import javax.annotation.Resource;import javax.servlet.http.HttpServletRequest;import java.util.HashMap;import java.util.List;import java.util.Map;/** * <p> *  前端控制器 * </p> * * @author ${author} * @since 2022-01-05 */@RestControllerpublic class ListSongController {    @Resource    private ListSongService listSongService;    //返回歌单所有歌曲    @GetMapping("/listSong")    public Object allListSong(){        List<ListSong> allListSong=listSongService.list();        return allListSong;    }    //返回歌单里指定歌单ID的歌曲    @GetMapping("/listSong/detail")    public Object listSongOfSongId(HttpServletRequest req){        String songListId=req.getParameter("songListId");        Map<String,Object> ids=new HashMap<>();        ids.put("song_list_id",songListId);        return listSongService.listByMap(ids);    }    //向歌单中添加歌曲    @PostMapping("/listSong/add")    public Object listSongAdd(HttpServletRequest req){        JSONObject jsonObject=new JSONObject();        String songId=req.getParameter("songId").trim();        String songListId=req.getParameter("songListId").trim();        ListSong listSong=new ListSong();        listSong.setSongId(Integer.parseInt(songId));        listSong.setSongListId(Integer.parseInt(songListId));        boolean res=listSongService.save(listSong);        if(res){            jsonObject.put("code",1);            jsonObject.put("msg","添加成功");        }else {            jsonObject.put("code", 0);            jsonObject.put("msg", "添加失败");        }        return jsonObject;    }    //根据歌曲ID删除歌单里的歌曲    @PostMapping("/listSong/delete")    public Object deleteSong(HttpServletRequest req){        String songId=req.getParameter("songId");        Map<String,Object> ids=new HashMap<>();        ids.put("song_id",songId);        return listSongService.removeByMap(ids);    }    //更新歌单里的歌曲信息    @PostMapping("/listSong/update")    public Object updateListSong(HttpServletRequest req){        JSONObject jsonObject=new JSONObject();        String id= req.getParameter("id").trim();        String songId=req.getParameter("songId").trim();        String songListId=req.getParameter("songListId").trim();        ListSong listSong=new ListSong();        listSong.setId(Integer.parseInt(id));        listSong.setSongId(Integer.parseInt(songId));        listSong.setSongListId(Integer.parseInt(songListId));        boolean res = listSongService.updateById(listSong);        if (res){            jsonObject.put("code", 1);            jsonObject.put("msg", "修改成功");        }else {            jsonObject.put("code", 0);            jsonObject.put("msg", "修改失败");        }        return jsonObject;    }}